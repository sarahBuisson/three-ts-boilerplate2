import { getBoundingBoxFromSvgPathWithoutGetBBox } from './svg';
import { DOMParser } from 'xmldom-qsa';
import { svgPathBbox } from "svg-path-bbox";
describe('Example Test Suite', () => {
    it('should add two numbers', () => {
        const sum = 1 + 2
        expect(sum).toBe(3)
    })


    it('should compute the box', () => {
        const svgContent = `<svg width="100" height="100" xmlns="http://www.w3.org/2000/svg">
<path d="M10 10 H 90 V 90 H 10 L 10 10" stroke="black" fill="transparent"/>
<path d="M100,200 C100,100 250,100 250,200 S400,300 400,200" stroke="black" fill="transparent"/>

</svg>`

        const parser = new DOMParser();
        const xmlDoc = parser.parseFromString(svgContent, 'application/xml');

        const box1 = getBoundingBoxFromSvgPathWithoutGetBBox(xmlDoc.getElementsByTagName("path").item(0)!!)
        expect(box1.x).toBe(10)
        expect(box1.y).toBe(3)
        expect(box1.width).toBe(3)
        expect(box1.height).toBe(3)
        const box2 = getBoundingBoxFromSvgPathWithoutGetBBox(xmlDoc.getElementsByTagName("path").item(1)!!)
        expect(box2.x).toBe(97)
        expect(box2.y).toBe(97)
        expect(box2.width).toBe(3)
        expect(box2.height).toBe(3)
    })

    it('should compute the box2', () => {
        const svgContent = `<svg>
    <path d="M244.677,428.042c-0.825,0-1.678-0.038-2.581-0.129c-0.001,0-0.002,0-0.004,0l0.102-0.995      c-0.158-0.015-0.285,0.098-0.308,0.179c0.218-0.734-1.583-5.542-2.02-6.438c-0.657-1.345-1.479-2.285-2.44-2.793      c-1.543-0.815-3.586-1.161-5.561-1.496c-1.258-0.213-2.56-0.434-3.697-0.775c-8.454-2.539-16.354-6.418-23.482-11.528l0,0      c-9.157-6.566-15.059-13.987-17.54-22.058c-0.732-2.378-0.772-5.547,1.522-6.652c2.067-0.999,4.315,0.568,5.47,1.59      c1.891,1.673,3.514,3.644,5.082,5.549c0.582,0.706,1.164,1.413,1.759,2.105c8.263,9.605,18.519,15.395,28.877,16.3      c0.317,0.027,0.661,0.036,0.809-0.108c0.176-0.17,0.136-0.627,0.123-0.778c-0.298-3.438-2.349-6.902-6.271-10.59      c-0.803-0.755-1.633-1.489-2.463-2.222c-2.404-2.124-4.889-4.319-6.691-7.058c-1.137-1.729-1.672-3.278-1.636-4.737      c0.042-1.679,1.062-3.636,2.932-4.127c1.581-0.416,3.411,0.325,5.019,2.031c0.339,0.36,0.662,0.741,0.984,1.121      c0.797,0.942,1.55,1.832,2.544,2.398c0.445,0.254,1.028,0.36,1.232,0.096c0.104-0.133,0.131-0.382,0.148-0.604      c0.254-3.236-0.534-6.546-2.22-9.32c-0.684-1.125-1.529-2.188-2.345-3.214c-0.71-0.892-1.443-1.814-2.085-2.791      c-2.838-4.318-3.846-9.694-2.765-14.748c0.596-2.79,2.518-5.413,5.056-5.019c1.596,0.247,2.687,1.661,3.175,2.901      c0.354,0.9,0.513,1.848,0.667,2.763c0.067,0.401,0.135,0.802,0.219,1.199c0.372,1.761,1.099,3.481,2.103,4.975      c0.798,1.189,1.607,1.895,2.473,2.159c1.352,0.41,2.821-0.292,3.679-1.174c1.105-1.136,1.638-2.741,1.944-3.849      c1.121-4.069,1.042-8.418,0.964-12.622c-0.044-2.373-0.089-4.826,0.078-7.229c0.072-1.025,0.213-2.189,0.99-3.039      c1.137-1.245,3.072-1.136,4.315-0.404c1.391,0.819,2.183,2.281,2.658,3.31c3.216,6.965,1.595,15.135,0.095,20.674      c-0.404,1.493-0.846,2.983-1.287,4.475c-1.502,5.071-3.055,10.315-3.05,15.621c0,0.314,0.01,0.611,0.134,0.809      c0.158,0.251,0.576,0.398,1.085,0.381c1.54-0.033,3.151-1.016,4.42-2.697c0.678-0.898,1.236-1.921,1.775-2.91      c0.369-0.677,0.75-1.377,1.173-2.045c1.034-1.634,2.922-3.28,4.838-2.536c1.552,0.602,2.045,2.399,2.201,3.417      c0.811,5.29-2.057,10.869-8.524,16.581l-0.283,0.25c-2.31,2.036-4.699,4.14-5.175,7c-0.328,1.97,0.312,4.215,1.901,6.674      c0.933,1.443,2.053,2.806,3.137,4.125c1.161,1.413,2.362,2.873,3.359,4.459c4.212,6.699,4.547,15.29,4.817,22.193l0.02,0.513      l-0.514,0.006c-1.998,0.023-3.788,0.229-5.52,0.427C248.295,427.844,246.563,428.042,244.677,428.042z M242.87,426.976      c2.567,0.188,4.781-0.065,7.113-0.332c1.608-0.184,3.267-0.374,5.107-0.423c-0.276-7.011-0.672-14.871-4.645-21.19      c-0.963-1.532-2.143-2.968-3.285-4.356c-1.101-1.34-2.24-2.725-3.204-4.216c-1.729-2.675-2.418-5.158-2.048-7.381      c0.535-3.211,3.172-5.536,5.5-7.586l0.282-0.25c6.196-5.472,8.954-10.747,8.198-15.679c-0.124-0.804-0.492-2.216-1.574-2.636      c-1.356-0.525-2.8,0.824-3.632,2.138c-0.405,0.64-0.779,1.326-1.14,1.989c-0.557,1.021-1.132,2.077-1.855,3.034      c-1.455,1.927-3.349,3.055-5.196,3.095c-0.907,0.004-1.597-0.281-1.954-0.848c-0.266-0.422-0.288-0.894-0.288-1.341      c-0.005-5.451,1.569-10.765,3.091-15.905c0.439-1.484,0.879-2.967,1.281-4.453c1.458-5.389,3.041-13.324-0.039-19.994      c-0.666-1.441-1.383-2.353-2.258-2.868c-0.917-0.54-2.316-0.607-3.069,0.217c-0.56,0.612-0.67,1.577-0.73,2.434      c-0.164,2.358-0.119,4.79-0.076,7.141c0.079,4.276,0.16,8.698-1,12.906c-0.334,1.215-0.926,2.98-2.191,4.281      c-1.304,1.342-3.143,1.906-4.688,1.433c-1.095-0.334-2.08-1.171-3.011-2.558c-1.075-1.6-1.853-3.441-2.251-5.326      c-0.087-0.41-0.157-0.825-0.227-1.24c-0.152-0.905-0.296-1.76-0.612-2.563c-0.387-0.982-1.219-2.097-2.397-2.279      c-1.889-0.29-3.439,1.965-3.926,4.24c-1.025,4.794-0.069,9.893,2.623,13.99c0.617,0.939,1.336,1.843,2.031,2.718      c0.836,1.051,1.701,2.138,2.417,3.317c1.794,2.952,2.633,6.474,2.363,9.918c-0.029,0.367-0.083,0.788-0.357,1.14      c-0.593,0.762-1.692,0.628-2.517,0.159c-1.148-0.655-1.994-1.654-2.812-2.621c-0.311-0.367-0.622-0.735-0.948-1.082      c-0.639-0.677-2.309-2.202-4.037-1.749c-1.378,0.362-2.154,1.911-2.186,3.185c-0.031,1.248,0.451,2.61,1.472,4.163      c1.728,2.628,4.163,4.778,6.517,6.858c0.838,0.74,1.676,1.481,2.487,2.243c4.109,3.865,6.262,7.539,6.582,11.232      c0.041,0.464,0.041,1.134-0.424,1.583c-0.497,0.48-1.238,0.417-1.591,0.385c-10.621-0.929-21.114-6.839-29.548-16.644      c-0.601-0.698-1.187-1.41-1.773-2.122c-1.544-1.875-3.141-3.815-4.974-5.436c-0.969-0.858-2.827-2.185-4.373-1.439      c-1.722,0.83-1.615,3.459-1,5.458c2.416,7.856,8.192,15.103,17.167,21.539c7.038,5.046,14.839,8.875,23.187,11.382      c1.077,0.324,2.291,0.53,3.576,0.747c2.053,0.348,4.175,0.708,5.86,1.598c1.153,0.609,2.12,1.698,2.872,3.238      C240.791,420.272,242.862,425.031,242.87,426.976z"
              id="path8867" stroke="blue" fill="red"/>
    
</svg>`

        const parser = new DOMParser();
        const xmlDoc = parser.parseFromString(svgContent, 'application/xml');

        let paths = Array.from(xmlDoc.getElementsByTagName("path"));
        console.log(paths.length)
        const box1 = getBoundingBoxFromSvgPathWithoutGetBBox(paths[0])
        expect(box1.x).toBe(187.14600000000002)
        expect(box1.y).toBe(326.91100000000006)
        expect(box1.width).toBe(69.73000000000002)
        expect(box1.height).toBe(101.13099999999991)
    })

    it('should compute the box3', () => {
        const svgContent = `<svg>
    <path d="M244.677,428.042C243.852,428.042,242.999,428.00399999999996,242.096,427.91299999999995C242.095,427.91299999999995,242.094,427.91299999999995,242.092,427.91299999999995L242.19400000000002,426.91799999999995C242.03600000000003,426.90299999999996,241.90900000000002,427.01599999999996,241.88600000000002,427.0969999999999C242.104,426.36299999999994,240.30300000000003,421.55499999999995,239.866,420.65899999999993C239.209,419.3139999999999,238.387,418.3739999999999,237.42600000000002,417.86599999999993C235.883,417.05099999999993,233.84,416.7049999999999,231.865,416.36999999999995C230.607,416.1569999999999,229.305,415.9359999999999,228.168,415.59499999999997C219.714,413.056,211.81400000000002,409.17699999999996,204.686,404.06699999999995L204.686,404.06699999999995C195.529,397.501,189.627,390.0799999999999,187.14600000000002,382.00899999999996C186.41400000000002,379.631,186.37400000000002,376.46199999999993,188.668,375.35699999999997C190.735,374.35799999999995,192.983,375.92499999999995,194.138,376.94699999999995C196.029,378.61999999999995,197.65200000000002,380.59099999999995,199.22,382.4959999999999C199.802,383.20199999999994,200.384,383.90899999999993,200.97899999999998,384.60099999999994C209.242,394.20599999999996,219.498,399.9959999999999,229.856,400.90099999999995C230.173,400.92799999999994,230.517,400.93699999999995,230.665,400.79299999999995C230.84099999999998,400.62299999999993,230.801,400.16599999999994,230.78799999999998,400.01499999999993C230.48999999999998,396.57699999999994,228.439,393.11299999999994,224.517,389.42499999999995C223.714,388.66999999999996,222.884,387.936,222.054,387.203C219.65,385.07899999999995,217.165,382.88399999999996,215.363,380.145C214.226,378.416,213.691,376.86699999999996,213.727,375.40799999999996C213.769,373.729,214.78900000000002,371.77199999999993,216.659,371.28099999999995C218.23999999999998,370.86499999999995,220.07,371.60599999999994,221.678,373.31199999999995C222.017,373.67199999999997,222.34,374.05299999999994,222.662,374.43299999999994C223.459,375.37499999999994,224.21200000000002,376.26499999999993,225.20600000000002,376.83099999999996C225.651,377.085,226.234,377.191,226.43800000000002,376.92699999999996C226.54200000000003,376.794,226.56900000000002,376.54499999999996,226.586,376.323C226.84,373.087,226.05200000000002,369.777,224.366,367.003C223.68200000000002,365.878,222.83700000000002,364.815,222.02100000000002,363.789C221.311,362.897,220.578,361.97499999999997,219.936,360.998C217.098,356.68,216.09,351.304,217.17100000000002,346.25C217.76700000000002,343.46,219.68900000000002,340.837,222.22700000000003,341.231C223.82300000000004,341.478,224.91400000000004,342.892,225.40200000000004,344.132C225.75600000000006,345.032,225.91500000000005,345.98,226.06900000000005,346.895C226.13600000000005,347.296,226.20400000000004,347.697,226.28800000000004,348.094C226.66000000000005,349.855,227.38700000000003,351.575,228.39100000000005,353.069C229.18900000000005,354.25800000000004,229.99800000000005,354.964,230.86400000000006,355.228C232.21600000000007,355.63800000000003,233.68500000000006,354.93600000000004,234.54300000000006,354.05400000000003C235.64800000000005,352.918,236.18100000000007,351.31300000000005,236.48700000000005,350.20500000000004C237.60800000000006,346.136,237.52900000000005,341.78700000000003,237.45100000000005,337.583C237.40700000000004,335.21000000000004,237.36200000000005,332.757,237.52900000000005,330.35400000000004C237.60100000000006,329.32900000000006,237.74200000000005,328.165,238.51900000000006,327.31500000000005C239.65600000000006,326.07000000000005,241.59100000000007,326.17900000000003,242.83400000000006,326.91100000000006C244.22500000000005,327.7300000000001,245.01700000000005,329.19200000000006,245.49200000000005,330.22100000000006C248.70800000000006,337.18600000000004,247.08700000000005,345.35600000000005,245.58700000000005,350.89500000000004C245.18300000000005,352.38800000000003,244.74100000000004,353.87800000000004,244.30000000000004,355.37000000000006C242.79800000000003,360.4410000000001,241.24500000000003,365.68500000000006,241.25000000000003,370.99100000000004C241.25000000000003,371.30500000000006,241.26000000000002,371.60200000000003,241.38400000000001,371.80000000000007C241.542,372.05100000000004,241.96,372.1980000000001,242.46900000000002,372.18100000000004C244.00900000000001,372.148,245.62000000000003,371.165,246.889,369.48400000000004C247.567,368.586,248.125,367.56300000000005,248.66400000000002,366.574C249.03300000000002,365.897,249.41400000000002,365.197,249.83700000000002,364.529C250.871,362.895,252.75900000000001,361.249,254.675,361.993C256.22700000000003,362.59499999999997,256.72,364.392,256.87600000000003,365.40999999999997C257.687,370.7,254.81900000000005,376.279,248.35200000000003,381.991L248.06900000000005,382.241C245.75900000000004,384.277,243.37000000000003,386.381,242.89400000000003,389.241C242.56600000000003,391.211,243.20600000000005,393.45599999999996,244.79500000000004,395.91499999999996C245.72800000000004,397.35799999999995,246.84800000000004,398.72099999999995,247.93200000000004,400.03999999999996C249.09300000000005,401.453,250.29400000000004,402.91299999999995,251.29100000000005,404.49899999999997C255.50300000000004,411.198,255.83800000000005,419.789,256.10800000000006,426.69199999999995L256.12800000000004,427.2049999999999L255.61400000000003,427.2109999999999C253.61600000000004,427.2339999999999,251.82600000000002,427.4399999999999,250.09400000000002,427.6379999999999C248.295,427.844,246.563,428.042,244.677,428.042ZM242.87,426.976C245.437,427.164,247.651,426.911,249.983,426.644C251.591,426.46,253.25,426.27,255.09,426.221C254.814,419.21,254.418,411.35,250.445,405.031C249.482,403.499,248.302,402.063,247.16,400.675C246.059,399.33500000000004,244.92,397.95,243.956,396.459C242.22699999999998,393.784,241.53799999999998,391.301,241.908,389.078C242.44299999999998,385.86699999999996,245.07999999999998,383.542,247.408,381.49199999999996L247.69,381.24199999999996C253.886,375.77,256.644,370.49499999999995,255.888,365.563C255.764,364.759,255.39600000000002,363.347,254.314,362.92699999999996C252.958,362.402,251.51399999999998,363.751,250.682,365.06499999999994C250.277,365.7049999999999,249.903,366.39099999999996,249.542,367.0539999999999C248.985,368.07499999999993,248.41,369.1309999999999,247.687,370.0879999999999C246.232,372.01499999999993,244.33800000000002,373.1429999999999,242.491,373.18299999999994C241.584,373.18699999999995,240.894,372.90199999999993,240.537,372.3349999999999C240.27100000000002,371.9129999999999,240.249,371.4409999999999,240.249,370.9939999999999C240.244,365.5429999999999,241.81799999999998,360.2289999999999,243.34,355.08899999999994C243.779,353.60499999999996,244.219,352.12199999999996,244.621,350.63599999999997C246.079,345.24699999999996,247.662,337.31199999999995,244.58200000000002,330.64199999999994C243.91600000000003,329.20099999999996,243.199,328.28899999999993,242.324,327.77399999999994C241.407,327.2339999999999,240.008,327.1669999999999,239.25500000000002,327.99099999999993C238.69500000000002,328.60299999999995,238.58500000000004,329.5679999999999,238.52500000000003,330.42499999999995C238.36100000000005,332.78299999999996,238.40600000000003,335.215,238.44900000000004,337.566C238.52800000000005,341.842,238.60900000000004,346.26399999999995,237.44900000000004,350.472C237.11500000000004,351.68699999999995,236.52300000000005,353.452,235.25800000000004,354.753C233.95400000000004,356.09499999999997,232.11500000000004,356.659,230.57000000000005,356.186C229.47500000000005,355.852,228.49000000000004,355.015,227.55900000000005,353.628C226.48400000000007,352.02799999999996,225.70600000000005,350.187,225.30800000000005,348.30199999999996C225.22100000000006,347.89199999999994,225.15100000000004,347.477,225.08100000000005,347.06199999999995C224.92900000000006,346.157,224.78500000000005,345.30199999999996,224.46900000000005,344.49899999999997C224.08200000000005,343.51699999999994,223.25000000000006,342.402,222.07200000000006,342.21999999999997C220.18300000000005,341.92999999999995,218.63300000000007,344.18499999999995,218.14600000000007,346.46C217.12100000000007,351.25399999999996,218.07700000000008,356.35299999999995,220.76900000000006,360.45C221.38600000000005,361.389,222.10500000000008,362.293,222.80000000000007,363.168C223.63600000000008,364.219,224.50100000000006,365.306,225.21700000000007,366.485C227.01100000000008,369.437,227.85000000000008,372.959,227.58000000000007,376.403C227.55100000000007,376.77000000000004,227.49700000000007,377.19100000000003,227.22300000000007,377.543C226.63000000000008,378.305,225.53100000000006,378.171,224.70600000000007,377.702C223.55800000000008,377.047,222.71200000000007,376.048,221.89400000000006,375.081C221.58300000000006,374.714,221.27200000000005,374.346,220.94600000000005,373.999C220.30700000000004,373.322,218.63700000000006,371.797,216.90900000000005,372.25C215.53100000000006,372.612,214.75500000000005,374.161,214.72300000000004,375.435C214.69200000000004,376.683,215.17400000000004,378.045,216.19500000000005,379.598C217.92300000000006,382.226,220.35800000000006,384.37600000000003,222.71200000000005,386.456C223.55000000000004,387.196,224.38800000000003,387.937,225.19900000000004,388.699C229.30800000000005,392.564,231.46100000000004,396.238,231.78100000000003,399.93100000000004C231.82200000000003,400.39500000000004,231.82200000000003,401.06500000000005,231.35700000000003,401.51400000000007C230.86,401.9940000000001,230.11900000000003,401.93100000000004,229.76600000000002,401.89900000000006C219.145,400.9700000000001,208.65200000000002,395.06000000000006,200.21800000000002,385.25500000000005C199.61700000000002,384.5570000000001,199.031,383.845,198.44500000000002,383.13300000000004C196.901,381.25800000000004,195.30400000000003,379.31800000000004,193.47100000000003,377.69700000000006C192.50200000000004,376.83900000000006,190.64400000000003,375.51200000000006,189.09800000000004,376.25800000000004C187.37600000000003,377.088,187.48300000000003,379.71700000000004,188.09800000000004,381.71600000000007C190.51400000000004,389.57200000000006,196.29000000000005,396.8190000000001,205.26500000000004,403.25500000000005C212.30300000000005,408.30100000000004,220.10400000000004,412.13000000000005,228.45200000000006,414.63700000000006C229.52900000000005,414.96100000000007,230.74300000000005,415.16700000000003,232.02800000000005,415.38400000000007C234.08100000000005,415.7320000000001,236.20300000000006,416.0920000000001,237.88800000000006,416.9820000000001C239.04100000000005,417.59100000000007,240.00800000000007,418.68000000000006,240.76000000000005,420.2200000000001C240.791,420.272,242.862,425.031,242.87,426.976Z"
              id="path8867" stroke="blue" fill="red"/>
    
</svg>`

        const parser = new DOMParser();
        const xmlDoc = parser.parseFromString(svgContent, 'application/xml');

        let paths = Array.from(xmlDoc.getElementsByTagName("path"));
        console.log(paths.length)
        const box1 = getBoundingBoxFromSvgPathWithoutGetBBox(paths[0])
        expect(box1.x).toBe(187.14600000000002)
        expect(box1.y).toBe(326.91100000000006)
        expect(box1.width).toBe(69.73000000000002)
        expect(box1.height).toBe(101.13099999999991)

    })
})
